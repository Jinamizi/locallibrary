generic
from django.views import generic

ListView
override
get_queryset - to change the list of records returned
get_context_data(self, **kwargs) - in order to pass additional context variables to the template
When doing this it is important to follow the pattern used above:

First get the existing context from our superclass.
Then add your new context information.
Then return the new (updated) context.

{% empty %} used to define what happens if the book_list is empty.

within the for loop Django will also create other variables that you can use to track the iteration
forloop.last - perform conditional processing the last time that the loop is run.
forloop.first
forloop.counter #starting index 1
forloop.counter0 #starting index 0
forloop.parentloop

<int:pk>
<something>

if you need more refined filtering (eg, to filter only strings that have a certain number of characters) then you need to use the re_path() <check> method
re_path(r'^book/(?P<pk>\d+)$', views.BookDetailView.as_view(), name='book-detail'),

you can pass a dictionary containing additional options <check> to the view
For example, given the path shown below, for a request to /myurl/halibut/ Django will call views.my_view(request, fish=halibut, my_template_name='some_path').
path('myurl/<int:fish>', views.my_view, {'my_template_name': 'some_path'}, name='aurl'),

DetailView
if a requested record does not exist Http404 exception will be raised. automatically. in production, this will automatically display an appropriate "resource not found" page, which you can customize if desired. <check>

get_object_or_404

<a href="{% url 'author-detail' book.author.pk %}">{{ book.author }}</a>
<a href="{{ book.author.get_absolute_url }}">{{ book.author }}</a>
the 2nd is preferred

book.bookinstance_set.all() return the set of BookInstance records associated with a particular Book.
foreignkey - one to many

when using paginator - rem to order
ordering choices:
1. Add a ordering inside a class Meta declaration on your model.
2. Add a queryset attribute in your custom class-based view, specifying an order_by().
3. Adding a get_queryset method to your custom class-based view and also specify the order_by().

jQuery is a javascript library. simplifies JS programming. Do more with JS, but with less code.

